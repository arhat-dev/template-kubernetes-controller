---
# Source: crds/samplecrd.arhat.dev_foo.yaml

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: foo.samplecrd.arhat.dev
spec:
  additionalPrinterColumns:
  - JSONPath: .spec.bar
    name: Bar
    type: string
  - JSONPath: .status.bar
    name: Status-Bar
    type: string
  group: samplecrd.arhat.dev
  names:
    kind: Foo
    listKind: FooList
    plural: foo
    shortNames:
    - foo
    - foos
    singular: foo
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Foo is the Schema for the foo API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: FooSpec defines the desired state of Foo
          properties:
            bar:
              type: string
          type: object
        status:
          description: FooStatus defines the observed state of Foo
          properties:
            bar:
              type: string
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []

---
# Source: template-kubernetes-controller/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: template-kubernetes-controller
  labels:
    helm.sh/chart: template-kubernetes-controller-0.0.1
    app.kubernetes.io/name: template-kubernetes-controller
    app.kubernetes.io/instance: template-kubernetes-controller
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
---
# Source: template-kubernetes-controller/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: template-kubernetes-controller
  labels:
    helm.sh/chart: template-kubernetes-controller-0.0.1
    app.kubernetes.io/name: template-kubernetes-controller
    app.kubernetes.io/instance: template-kubernetes-controller
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: template-kubernetes-controller
    app.kubernetes.io/instance: template-kubernetes-controller
---
# Source: template-kubernetes-controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: template-kubernetes-controller
  labels:
    helm.sh/chart: template-kubernetes-controller-0.0.1
    app.kubernetes.io/name: template-kubernetes-controller
    app.kubernetes.io/instance: template-kubernetes-controller
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: template-kubernetes-controller
      app.kubernetes.io/instance: template-kubernetes-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/name: template-kubernetes-controller
        app.kubernetes.io/instance: template-kubernetes-controller
    spec:
      serviceAccountName: template-kubernetes-controller
      securityContext:
        {}
      containers:
        - name: template-kubernetes-controller
          securityContext:
            {}
          image: "ghcr.io/arhat-dev/template-kubernetes-controller:latest"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {}
---
# Source: template-kubernetes-controller/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "template-kubernetes-controller-test-connection"
  labels:
    helm.sh/chart: template-kubernetes-controller-0.0.1
    app.kubernetes.io/name: template-kubernetes-controller
    app.kubernetes.io/instance: template-kubernetes-controller
    app.kubernetes.io/version: "latest"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['template-kubernetes-controller:80']
  restartPolicy: Never
